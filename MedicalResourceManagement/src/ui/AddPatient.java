/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import medicalresourcemanagement.City;
import medicalresourcemanagement.CityDirectory;
import medicalresourcemanagement.Community;
import medicalresourcemanagement.CommunityDirectory;
import medicalresourcemanagement.DoctorDirectory;
import medicalresourcemanagement.Encounter;
import medicalresourcemanagement.EncounterHistory;
import medicalresourcemanagement.Hospital;
import medicalresourcemanagement.HospitalDirectory;
import medicalresourcemanagement.House;
import medicalresourcemanagement.Patient;
import medicalresourcemanagement.Person;
import medicalresourcemanagement.PatientDirectory;

/**
 *
 * @author bhargavi
 */
public class AddPatient extends javax.swing.JPanel {

        Patient patient;
        PatientDirectory patientHistory;
        HospitalDirectory hospitalHistory;
        PatientDirectory newPatientDirectory;
        CityDirectory cityHistory;
        
        EncounterHistory encounterHistory;    
        ArrayList<Encounter> patientencounterhistory; 
        JPanel workArea;
         City chosenCity;
    Community chosenComm;
    CommunityDirectory communityHistory;
        
        public String checkError;


   

    
    /**
     * Creates new form temp
     */
    public AddPatient(JPanel workArea,PatientDirectory patientHistory, DoctorDirectory doctorHistory,EncounterHistory encounterHistory, CityDirectory cityHistory, CommunityDirectory communityHistory ) {
        initComponents();
        this.patientHistory = new PatientDirectory();
//        this.patientHistory = patientHistory;
        this.encounterHistory = encounterHistory;
        this.workArea = workArea;
        this.patient = patient;
        this.cityHistory = cityHistory;
        this.communityHistory = communityHistory;
        populatecity();
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        spperson = new javax.swing.JScrollPane();
        tblperson = new javax.swing.JTable();
        lblname1 = new javax.swing.JLabel();
        lbltitle = new javax.swing.JLabel();
        lblage1 = new javax.swing.JLabel();
        lblphone1 = new javax.swing.JLabel();
        lblcommunity1 = new javax.swing.JLabel();
        lblhouseaddress1 = new javax.swing.JLabel();
        lblcity1 = new javax.swing.JLabel();
        lblusername1 = new javax.swing.JLabel();
        lblpassword1 = new javax.swing.JLabel();
        txtage1 = new javax.swing.JTextField();
        txtname1 = new javax.swing.JTextField();
        txtphone1 = new javax.swing.JTextField();
        txtusername1 = new javax.swing.JTextField();
        txtpassword1 = new javax.swing.JTextField();
        cbcommunity1 = new javax.swing.JComboBox<>();
        btnupdate = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        btnManageEncounter = new javax.swing.JButton();
        cbha1 = new javax.swing.JComboBox<>();
        cbCity1 = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        lblname = new javax.swing.JLabel();
        lblage = new javax.swing.JLabel();
        lblphone = new javax.swing.JLabel();
        lblcommunity = new javax.swing.JLabel();
        lblhouseaddress = new javax.swing.JLabel();
        lblcity = new javax.swing.JLabel();
        lblusername = new javax.swing.JLabel();
        lblpassword = new javax.swing.JLabel();
        txtage = new javax.swing.JTextField();
        txtname = new javax.swing.JTextField();
        txtphone = new javax.swing.JTextField();
        txtusername = new javax.swing.JTextField();
        txtpassword = new javax.swing.JTextField();
        cbcommunity = new javax.swing.JComboBox<>();
        btnadd = new javax.swing.JButton();
        lblAddTitle = new javax.swing.JLabel();
        lblErrorName = new javax.swing.JLabel();
        lblErrorAge = new javax.swing.JLabel();
        lblErrorPhone = new javax.swing.JLabel();
        lblErrorHouseAddress = new javax.swing.JLabel();
        lblErrorCity = new javax.swing.JLabel();
        lblErrorUserName = new javax.swing.JLabel();
        lblErrorPassword = new javax.swing.JLabel();
        cbCity = new javax.swing.JComboBox<>();
        cbHa = new javax.swing.JComboBox<>();

        setPreferredSize(new java.awt.Dimension(900, 700));

        jTabbedPane1.setSize(new java.awt.Dimension(900, 700));
        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jPanel2.setPreferredSize(new java.awt.Dimension(900, 700));

        spperson.setPreferredSize(new java.awt.Dimension(900, 100));

        tblperson.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Patient Id", "Name", "Age", "Phone", "Community", "House Address", "City", "Username", "Password"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblperson.setPreferredSize(new java.awt.Dimension(900, 80));
        spperson.setViewportView(tblperson);

        lblname1.setText("Name :");

        lbltitle.setFont(new java.awt.Font("Helvetica Neue", 3, 18)); // NOI18N
        lbltitle.setText("Manage Patient");

        lblage1.setText("Age :");

        lblphone1.setText("Phone :");

        lblcommunity1.setText("Community :");

        lblhouseaddress1.setText("House Address :");

        lblcity1.setText("City :");

        lblusername1.setText("User Name :");

        lblpassword1.setText("Password :");

        txtage1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtage1ActionPerformed(evt);
            }
        });

        cbcommunity1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbcommunity1ActionPerformed(evt);
            }
        });

        btnupdate.setText("Update");
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });

        jButton1.setText("View & Update");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btndelete.setText("Delete");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });

        jLabel1.setText("Search by Id");

        jLabel2.setText("Search by Name");

        btnManageEncounter.setText("Manage Encounter");
        btnManageEncounter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageEncounterActionPerformed(evt);
            }
        });

        cbCity1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCity1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(26, 26, 26)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(134, 134, 134))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(spperson, javax.swing.GroupLayout.PREFERRED_SIZE, 989, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(416, 416, 416)
                        .addComponent(lbltitle))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblphone1)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnManageEncounter)
                                .addGap(131, 131, 131)
                                .addComponent(lblname1))
                            .addComponent(lblage1)
                            .addComponent(lblcity1))
                        .addGap(65, 65, 65)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtname1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(194, 194, 194)
                                .addComponent(jButton1)
                                .addGap(18, 18, 18)
                                .addComponent(btndelete))
                            .addComponent(txtage1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(267, 267, 267)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblhouseaddress1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblcommunity1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblusername1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblpassword1, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(57, 57, 57)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtpassword1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtusername1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(cbha1, javax.swing.GroupLayout.Alignment.LEADING, 0, 168, Short.MAX_VALUE)
                                        .addComponent(cbcommunity1, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cbCity1, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addComponent(txtphone1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(353, 353, 353)
                        .addComponent(btnupdate)))
                .addContainerGap(133, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(lbltitle)
                .addGap(63, 63, 63)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(spperson, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jButton1)
                                            .addComponent(btndelete))
                                        .addGap(51, 51, 51))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblname1)
                                            .addComponent(txtname1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnManageEncounter))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblage1)
                                            .addComponent(txtage1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(6, 6, 6)))
                                .addGap(3, 3, 3)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblphone1)
                                    .addComponent(txtphone1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(41, 41, 41))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblcity1)
                                .addComponent(cbCity1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblcommunity1)
                            .addComponent(cbcommunity1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblhouseaddress1)
                            .addComponent(cbha1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblusername1)
                            .addComponent(txtusername1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtpassword1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblpassword1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addComponent(btnupdate)
                .addGap(19, 19, 19))
        );

        jTabbedPane1.addTab("Manage Patient", jPanel2);

        jPanel1.setPreferredSize(new java.awt.Dimension(900, 700));

        lblname.setText("Name :");

        lblage.setText("Age :");

        lblphone.setText("Phone :");

        lblcommunity.setText("Community :");

        lblhouseaddress.setText("House Address :");

        lblcity.setText("City :");

        lblusername.setText("User Name :");

        lblpassword.setText("Password :");

        txtage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtageActionPerformed(evt);
            }
        });
        txtage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtageKeyReleased(evt);
            }
        });

        txtname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnameActionPerformed(evt);
            }
        });
        txtname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtnameKeyReleased(evt);
            }
        });

        txtphone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtphoneActionPerformed(evt);
            }
        });
        txtphone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtphoneKeyReleased(evt);
            }
        });

        txtusername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtusernameActionPerformed(evt);
            }
        });

        txtpassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtpasswordKeyReleased(evt);
            }
        });

        cbcommunity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbcommunityActionPerformed(evt);
            }
        });

        btnadd.setText("Add");
        btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddActionPerformed(evt);
            }
        });

        lblAddTitle.setText("Add Patient");

        lblErrorName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lblErrorNameKeyReleased(evt);
            }
        });

        lblErrorAge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lblErrorAgeKeyReleased(evt);
            }
        });

        lblErrorPhone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lblErrorPhoneKeyReleased(evt);
            }
        });

        lblErrorHouseAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lblErrorHouseAddressKeyReleased(evt);
            }
        });

        lblErrorCity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lblErrorCityKeyReleased(evt);
            }
        });

        lblErrorUserName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lblErrorUserNameKeyReleased(evt);
            }
        });

        lblErrorPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lblErrorPasswordKeyReleased(evt);
            }
        });

        cbCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCityActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(176, 176, 176)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblpassword)
                        .addComponent(lblusername)
                        .addComponent(lblhouseaddress)
                        .addComponent(lblcommunity))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblage)
                            .addComponent(lblname)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblcity)
                            .addComponent(lblphone))
                        .addGap(12, 12, 12)))
                .addGap(137, 137, 137)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbCity, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtage, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addComponent(txtphone)
                    .addComponent(cbcommunity, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbHa, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtusername)
                    .addComponent(txtpassword, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                    .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lblErrorHouseAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblErrorAge, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblErrorPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblErrorName, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblErrorCity, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblErrorUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblErrorPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(150, Short.MAX_VALUE))))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(337, 337, 337)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnadd)
                    .addComponent(lblAddTitle))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cbCity, cbHa, cbcommunity, txtage, txtname, txtpassword, txtphone, txtusername});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(lblAddTitle)
                .addGap(63, 63, 63)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblname)
                            .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblErrorName, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(lblage))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblErrorAge, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblphone)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtphone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblErrorPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblErrorCity, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(cbCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblcity)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addComponent(lblcommunity)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblhouseaddress)
                                .addComponent(cbHa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblErrorHouseAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblusername)
                            .addComponent(txtusername, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(166, 166, 166)
                        .addComponent(cbcommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblErrorUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblpassword)
                        .addComponent(txtpassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblErrorPassword, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(btnadd)
                .addGap(168, 168, 168))
        );

        jTabbedPane1.addTab("Add Patient", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1152, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtageActionPerformed
 public void populatecity() {
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        
        for(City c: this.cityHistory.getCitylist()) {
            model.addElement(c.getCityName());
        }
        
        cbCity.setModel(model);
                cbCity1.setModel(model);

    }
    private void btnaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddActionPerformed
        // TODO add your handling code here:
        if(checkError != null /*|| (txtname.getText() == null  || txtphone.getText() == null || txthouseaddress.getText() == null || txtcity.getText() ==null || txtusername.getText() == null ||txtpassword.getText() == null)*/){
            JOptionPane.showMessageDialog(this,"Please provide valid inputs to all fields");

        }
        else{
            String name = txtname.getText();
            int age = Integer.parseInt(txtage.getText());
            long phone = Long.parseLong(txtphone.getText());
            String community = cbcommunity.getSelectedItem().toString();
            String homeAddress = cbHa.getSelectedItem().toString();
            String city = cbCity.getSelectedItem().toString();
            String userName = txtusername.getText();
            String password = txtpassword.getText();

            Patient per = patientHistory.addNewPatient(); // 

            // sets value to ArrayList from the fields that the data is entered.

            per.setName(name);
            per.setAge(age);
            per.setPhone(phone);
            per.setCommunity(community);
            per.setHouse(homeAddress);
            per.setCity(city);
            per.setUserName(userName);
            per.setPassword(password);

            // shows a dialogue message when the data clicked save button
            JOptionPane.showMessageDialog(this,"Employee details added");

            // empties all the fields after saving the entered data to ArrayList to facilitate new entries.
            txtname.setText("");
            txtage.setText("");
            txtphone.setText("");
            cbcommunity.setSelectedIndex(-1);
            cbHa.setSelectedIndex(-1);
            cbCity.setSelectedIndex(-1);
            txtusername.setText("");
            txtpassword.setText("");
            populateDataToTable();

        }

    }//GEN-LAST:event_btnaddActionPerformed

    private void txtage1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtage1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtage1ActionPerformed

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
        // TODO add your handling code here:

         int selectedRowIndex = tblperson.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a Record to update the employee details");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblperson.getModel();
        Patient selectedEntry = patientHistory.getPatientHistory().get(selectedRowIndex);

        //Patient selectedEntry = (Patient) model.getValueAt(selectedRowIndex, 1);
//        selectedEntry.setEmployeeId(txtEmployeeId.getText());
        selectedEntry.setName(txtname1.getText());
        
        selectedEntry.setAge(Integer.parseInt(txtage1.getText()));
        selectedEntry.setPhone(Long.parseLong(txtphone1.getText()));
//        selectedEntry.setHouse(txthouseaddress1.getText());
//        selectedEntry.setCity(txtcity1.getText());
        selectedEntry.setUserName(txtusername1.getText());
        selectedEntry.setPassword(txtpassword1.getText());
        
        

  
        populateDataToTable();
        
        //once deleted all the fiels in view model will be deleted
          txtname1.setText("");
          txtage1.setText("");          
          txtphone1.setText("");
          cbCity1.setSelectedItem(-1);
          cbcommunity.setSelectedItem(-1);
          cbha1.setSelectedItem(-1);
          txtusername1.setText(""); 
          txtpassword1.setText(""); 

    }//GEN-LAST:event_btnupdateActionPerformed

    private void lblErrorNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lblErrorNameKeyReleased
        // TODO add your handling code here:
        // TODO add your handling code here:
        
    }//GEN-LAST:event_lblErrorNameKeyReleased

    private void lblErrorAgeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lblErrorAgeKeyReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_lblErrorAgeKeyReleased

    private void lblErrorPhoneKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lblErrorPhoneKeyReleased
        // TODO add your handling code here:
        String PATTERN = "^[0-9 +()-]{10}$";  // pattern to check against input
        Pattern pattern = Pattern.compile(PATTERN);
        Matcher match = pattern.matcher(txtphone.getText());
        if(!match.matches())
        {
            checkError = "error";
            lblErrorPhone.setText("Please Enter a 10 digit number."); // throws error message
        }
        else
        {
            checkError = null;
            lblErrorPhone.setText(null);
        }
    }//GEN-LAST:event_lblErrorPhoneKeyReleased

    private void lblErrorHouseAddressKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lblErrorHouseAddressKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_lblErrorHouseAddressKeyReleased

    private void lblErrorCityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lblErrorCityKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_lblErrorCityKeyReleased

    private void lblErrorUserNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lblErrorUserNameKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_lblErrorUserNameKeyReleased

    private void lblErrorPasswordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lblErrorPasswordKeyReleased
        // TODO add your handling code here:
        
      
    }//GEN-LAST:event_lblErrorPasswordKeyReleased

    private void txtnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnameKeyReleased
        // TODO add your handling code here:
        String PATTERN = "^[a-zA-Z '/:]+$"; // regex that matches the input
        Pattern pattern = Pattern.compile(PATTERN);
        Matcher match = pattern.matcher(txtname.getText()); // gets text from field and matched against the regex
     
        if(!match.matches())
        {
            checkError = "error";
            lblErrorName.setText("Enter a valid Input."); //throws message if input other than text is entered
        }
        else
        {
            checkError = null;
            lblErrorName.setText(null);
        }
    }//GEN-LAST:event_txtnameKeyReleased

    private void txtageKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtageKeyReleased
        // TODO add your handling code here:
         String PATTERN = "^[0-9 +()-]{1,3}$";  // pattern to check against input
        Pattern pattern = Pattern.compile(PATTERN);
        Matcher match = pattern.matcher(txtage.getText());
        if(!match.matches())
        {
            checkError = "error";
            lblErrorAge.setText("Enter Valid Age"); // throws error message
        }
        else
        {
            checkError = null;
            lblErrorAge.setText(null);
        }
    }//GEN-LAST:event_txtageKeyReleased

    private void txtphoneKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtphoneKeyReleased
        // TODO add your handling code here:
        String PATTERN = "^[0-9 +()-]{10}$";  // pattern to check against input
        Pattern pattern = Pattern.compile(PATTERN);
        Matcher match = pattern.matcher(txtphone.getText());
        if(!match.matches())
        {
            checkError = "error";
            lblErrorPhone.setText("Please Enter a 10 digit number."); // throws error message
        }
        else
        {
            checkError = null;
            lblErrorPhone.setText(null);
        }
    }//GEN-LAST:event_txtphoneKeyReleased

    private void txtpasswordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpasswordKeyReleased
        // TODO add your handling code here:
          String PATTERN = "^(?=.*[0-9])"
                       + "(?=.*[a-z])(?=.*[A-Z])"
                       + "(?=.*[@#$%^&+=])"
                       + "(?=\\S+$).{8,20}$"; // regex that matches the input
        Pattern pattern = Pattern.compile(PATTERN);
        Matcher match = pattern.matcher(txtpassword.getText()); // gets text from field and matched against the regex
     
        if(!match.matches())
        {
            checkError = "error";
            lblErrorPassword.setText("Make sure the password has atleast one number , a capital letter and a special character"); //throws message if input other than text is entered
        }
        else
        {
            checkError = null;
            lblErrorPassword.setText(null);
        }
    }//GEN-LAST:event_txtpasswordKeyReleased

    private void txtnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnameActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tblperson.getSelectedRow();  // gives index of selected rows
        if(selectedRowIndex < 0)
        {
           JOptionPane.showMessageDialog(this, "Select a entry to view");
           return;
        }
        


          
        txtname1.setText(patientHistory.getPatientHistory().get(selectedRowIndex).getName());
        txtage1.setText(String.valueOf(patientHistory.getPatientHistory().get(selectedRowIndex).getAge()));
        txtphone1.setText(String.valueOf(patientHistory.getPatientHistory().get(selectedRowIndex).getPhone()));
//        txthouseaddress1.setText(patientHistory.getPatientHistory().get(selectedRowIndex).getHouse());
//        cbcommunity1.setSelectedItem(patientHistory.getPatientHistory().get(selectedRowIndex).getCommunityName());
//        txtcity1.setText(patientHistory.getPatientHistory().get(selectedRowIndex).getCity());
        txtusername1.setText(patientHistory.getPatientHistory().get(selectedRowIndex).getUserName());
        txtpassword1.setText(patientHistory.getPatientHistory().get(selectedRowIndex).getPassword());


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void cbcommunityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbcommunityActionPerformed
        // TODO add your handling code here:
          for(Community x: this.communityHistory.getCommunitylist()){
            if(x.getCommunityName().equals(cbcommunity.getSelectedItem())){
                chosenComm=x;
            }
        }
          String commtxt = cbcommunity.getSelectedItem().toString();
          Community selectedCom = communityHistory.searchCommunity(commtxt);
          
          
          
          
//        lblCityVal.setText("");
        populateHouses(); 
//        lblCityVal.setText("");
        
        
    }//GEN-LAST:event_cbcommunityActionPerformed

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        // TODO add your handling code here:
         int selectedRowIndex = tblperson.getSelectedRow();  // gives index of selected rows
        if(selectedRowIndex < 0)
        {
           JOptionPane.showMessageDialog(this, "Select a entry to delete");
           return;
        }
        
                DefaultTableModel model = (DefaultTableModel)tblperson.getModel();
                Patient selectedEntry = patientHistory.getPatientHistory().get(selectedRowIndex);
                patientHistory.deletePatient(selectedEntry);
                
        JOptionPane.showMessageDialog(this, "Selected Employee Deleted");
         populateDataToTable(); //  deletes record from table and updates all entries

         



    }//GEN-LAST:event_btndeleteActionPerformed

    private void btnManageEncounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageEncounterActionPerformed
        // TODO add your handling code here:
//        
//        int selectedRowIndex;
//        selectedRowIndex = tblperson.getSelectedRow();
//        if (selectedRowIndex < 0)
//        {
//            JOptionPane.showMessageDialog(null, "Pls select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
//        }
//        int patient_id = (int) tblperson.getValueAt(selectedRowIndex, 0);
//        Patient patient = patientHistory.searchPatient(patient_id);
//        ArrayList<Encounter> patientencounterhistory = encounterHistory.searchPatient(patient_id);
////        JOptionPane.showMessageDialog(null, patientencounterhistory.isEmpty());
//        manageEncounterjPanel encounterPanel = new manageEncounterjPanel(WorkArea, patient, encounterHistory, patientencounterhistory);
//        WorkArea.setVisible(true);
////        EncounterJPanel encounterPanel = new EncounterJPanel(newEncounterPersonDirectory, person, patientDirectory, encounterHistory, false);
////        WorkArea.add("manageEncounterjPanel", encounterPanel);
////        CardLayout cardlayout = (CardLayout) WorkArea.getLayout();
////        cardlayout.next(WorkArea);
    }//GEN-LAST:event_btnManageEncounterActionPerformed

    private void cbcommunity1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbcommunity1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbcommunity1ActionPerformed

    private void txtphoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtphoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtphoneActionPerformed

    private void txtusernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtusernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtusernameActionPerformed

    private void cbCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCityActionPerformed
        // TODO add your handling code here:
        
        for(City x: this.cityHistory.getCitylist()){
            if(x.getCityName().equals(cbCity.getSelectedItem())){
                chosenCity=x;
            }
        }
//        lblCityVal.setText("");
        populatecommunitiesInManageDoctor();
        
        
        
        
    }//GEN-LAST:event_cbCityActionPerformed

    private void cbCity1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCity1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbCity1ActionPerformed

    
    public void populateHouses() {
      
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        
        for(House com: this.chosenComm.getHouselist()) {
            model.addElement(com.getHouseAddress());
        }
        
        cbHa.setModel(model);
        cbha1.setModel(model);
//        commdropdown.setSelectedIndex(-1);

    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnManageEncounter;
    private javax.swing.JButton btnadd;
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnupdate;
    private javax.swing.JComboBox<String> cbCity;
    private javax.swing.JComboBox<String> cbCity1;
    private javax.swing.JComboBox<String> cbHa;
    private javax.swing.JComboBox<String> cbcommunity;
    private javax.swing.JComboBox<String> cbcommunity1;
    private javax.swing.JComboBox<String> cbha1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JLabel lblAddTitle;
    private javax.swing.JLabel lblErrorAge;
    private javax.swing.JLabel lblErrorCity;
    private javax.swing.JLabel lblErrorHouseAddress;
    private javax.swing.JLabel lblErrorName;
    private javax.swing.JLabel lblErrorPassword;
    private javax.swing.JLabel lblErrorPhone;
    private javax.swing.JLabel lblErrorUserName;
    private javax.swing.JLabel lblage;
    private javax.swing.JLabel lblage1;
    private javax.swing.JLabel lblcity;
    private javax.swing.JLabel lblcity1;
    private javax.swing.JLabel lblcommunity;
    private javax.swing.JLabel lblcommunity1;
    private javax.swing.JLabel lblhouseaddress;
    private javax.swing.JLabel lblhouseaddress1;
    private javax.swing.JLabel lblname;
    private javax.swing.JLabel lblname1;
    private javax.swing.JLabel lblpassword;
    private javax.swing.JLabel lblpassword1;
    private javax.swing.JLabel lblphone;
    private javax.swing.JLabel lblphone1;
    private javax.swing.JLabel lbltitle;
    private javax.swing.JLabel lblusername;
    private javax.swing.JLabel lblusername1;
    private javax.swing.JScrollPane spperson;
    private javax.swing.JTable tblperson;
    private javax.swing.JTextField txtage;
    private javax.swing.JTextField txtage1;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtname1;
    private javax.swing.JTextField txtpassword;
    private javax.swing.JTextField txtpassword1;
    private javax.swing.JTextField txtphone;
    private javax.swing.JTextField txtphone1;
    private javax.swing.JTextField txtusername;
    private javax.swing.JTextField txtusername1;
    // End of variables declaration//GEN-END:variables

    
    public void populatecommunitiesInManageDoctor() {
      
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        
        for(Community com: this.chosenCity.getCommunitylist()) {
            model.addElement(com.getCommunityName());
        }
        
        cbcommunity.setModel(model);
        cbcommunity1.setModel(model);
//        commdropdown.setSelectedIndex(-1);

    }
  private void populateDataToTable() {
        //TableModel is used to manipulate table content.
        // type casts tablemodel to defaultTableModel.
    DefaultTableModel model = (DefaultTableModel) tblperson.getModel();
    model.setRowCount(0); // deleting empty records
    
    // looping over profileHistory of employees.
    // getProfileHistory returns the history of employee records.
    for (Patient p : patientHistory.getPatientHistory()){
        
        // row is array of objects with 9 menbers. (1 for each column)
        Object[] row =  new Object[10];
        row[0] = p.getPatientId()/*.getPatientId()*/;/*.getEmployeeId()*/
        row[1] = p.getName();
        row[2] = p.getAge();
        row[3] = p.getPhone();
        row[4] = p.getCity();
        row[5] = p.getCommunity();
        row[6] = p.getHouse();
        row[7] = p.getUserName();
        row[8] = p.getPassword();
                
        

        model.addRow(row); // adds row to model

    }
    }

}
