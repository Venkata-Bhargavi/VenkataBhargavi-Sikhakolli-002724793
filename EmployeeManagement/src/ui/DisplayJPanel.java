/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.awt.Image;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import model.EmployeeProfileHistory;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.EmployeeProfile;

/**
 *
 * @author bhargavi
 */
public class DisplayJPanel extends javax.swing.JPanel {

    
    EmployeeProfileHistory profileHistory;
    /**
     * Creates new form DisplayJPanel
     */
    public DisplayJPanel(EmployeeProfileHistory profileHistory) {
        initComponents();
        this.profileHistory  = profileHistory; // the reference of profileHistory from this function is stored in this.profileHistory which is declared above.
        populateDataToTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        displayTable = new javax.swing.JTable();
        btnview = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtEmployeeId = new javax.swing.JTextField();
        txtEmployeeName = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        txtGender = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtStartDate = new javax.swing.JTextField();
        txtLevel = new javax.swing.JTextField();
        txtTeamInfo = new javax.swing.JTextField();
        txtPositionTitle = new javax.swing.JTextField();
        lblDisplayPhoto = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        lblSearch = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();

        setPreferredSize(new java.awt.Dimension(1200, 1200));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Employee Details");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 1200, -1));

        displayTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Employee ID", "Name", "Age", "Gender", "Phone", "E-mail", "Start Date", "Level", "Team Info", "Position Title"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(displayTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 1170, 197));

        btnview.setText("View");
        btnview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnviewActionPerformed(evt);
            }
        });
        add(btnview, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 330, -1, -1));

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 330, -1, -1));

        jLabel2.setText("Employee Id");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 390, -1, -1));

        jLabel3.setText("Employee Name");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 440, -1, -1));

        jLabel4.setText("Age");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 480, -1, -1));

        jLabel5.setText("Gender");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 520, -1, -1));

        jLabel6.setText("Phone");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 560, -1, -1));

        jLabel7.setText("E-mail");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 390, 74, -1));

        jLabel8.setText("Start Date");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 440, 74, -1));

        jLabel9.setText("Level");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 480, 74, -1));

        jLabel10.setText("Team Info");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 520, 74, -1));

        jLabel11.setText("Position Title");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 560, -1, -1));

        txtEmployeeId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmployeeIdActionPerformed(evt);
            }
        });
        add(txtEmployeeId, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 390, 195, -1));
        add(txtEmployeeName, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 430, 195, -1));
        add(txtAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 470, 195, -1));
        add(txtGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 510, 195, -1));
        add(txtPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 560, 195, -1));
        add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 390, 195, -1));
        add(txtStartDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 430, 195, -1));

        txtLevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLevelActionPerformed(evt);
            }
        });
        add(txtLevel, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 470, 195, -1));
        add(txtTeamInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 510, 195, -1));
        add(txtPositionTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 560, 195, -1));
        add(lblDisplayPhoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 390, 150, 180));

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 620, -1, -1));

        lblSearch.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        lblSearch.setText("Search");
        add(lblSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 67, 50, 30));

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });
        add(txtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 70, 180, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void txtEmployeeIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmployeeIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmployeeIdActionPerformed

    private void txtLevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLevelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLevelActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = displayTable.getSelectedRow();  // gives index of selected rows
        if(selectedRowIndex < 0)
        {
           JOptionPane.showMessageDialog(this, "Select a entry to delete");
           return;
        }
        
        DefaultTableModel model = (DefaultTableModel)displayTable.getModel();
        
        //DefaultTableModel model = (DefaultTableModel) displayTable.getModel();
        // getting reference of selected entry.
        EmployeeProfile selectedEntry = (EmployeeProfile) model.getValueAt(selectedRowIndex, 0);  // to get any value cells from table through row and column
            
        profileHistory.deleteProfile(selectedEntry);
        
        JOptionPane.showMessageDialog(this, "Selected Employee Deleted");
        
        populateDataToTable(); //  deletes record from table and updates all entries
        
        //once deleted all the fiels in view model will be deleted
          txtEmployeeId.setText("");
          txtAge.setText("");
          txtEmail.setText("");
          txtEmployeeName.setText("");
          txtGender.setText("");
          txtLevel.setText("");
          txtPhone.setText("");
          txtPositionTitle.setText("");
          txtStartDate.setText("");
          txtTeamInfo.setText(""); 
          lblDisplayPhoto.setIcon(null);

          
          
          
     
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnviewActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = displayTable.getSelectedRow();  // gives index of selected rows
        if(selectedRowIndex < 0)
        {
           JOptionPane.showMessageDialog(this, "Select a entry to view");
           return;
        }
        
        DefaultTableModel model = (DefaultTableModel)displayTable.getModel();
        
        //DefaultTableModel model = (DefaultTableModel) displayTable.getModel();
        // getting reference of selected entry.
        EmployeeProfile selectedEntry = (EmployeeProfile) model.getValueAt(selectedRowIndex, 0);  // to get any value cells from table through row and column
          txtEmployeeId.setText(selectedEntry.getEmployeeId());
          txtAge.setText(String.valueOf(selectedEntry.getAge()));
          txtEmail.setText(selectedEntry.getEmail());
          txtEmployeeName.setText(selectedEntry.getName());
          txtGender.setText(selectedEntry.getGender());
          txtLevel.setText(selectedEntry.getLevel());
          txtPhone.setText(String.valueOf(selectedEntry.getPhone()));
          txtPositionTitle.setText(selectedEntry.getPositionTitle());
          txtStartDate.setText(String.valueOf(selectedEntry.getStartDate()));
          txtTeamInfo.setText(selectedEntry.getTeamInfo());

          
         ImageIcon ii = new ImageIcon(selectedEntry.getPhoto());
        Image image = ii.getImage().getScaledInstance(lblDisplayPhoto.getWidth(), lblDisplayPhoto.getHeight(), Image.SCALE_SMOOTH);
        lblDisplayPhoto.setIcon(new ImageIcon(image));

        
    }//GEN-LAST:event_btnviewActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        
        


    }//GEN-LAST:event_btnUpdateActionPerformed

    /**
     * Actions while searching through keywords
     * @param evt 
     */
    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
            DefaultTableModel model = (DefaultTableModel) displayTable.getModel();
            String search = txtSearch.getText().toLowerCase(); // reads the search text as lower case
            TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
            displayTable.setRowSorter(tr);
            tr.setRowFilter(RowFilter.regexFilter(search));
    }//GEN-LAST:event_txtSearchKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnview;
    private javax.swing.JTable displayTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDisplayPhoto;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEmployeeId;
    private javax.swing.JTextField txtEmployeeName;
    private javax.swing.JTextField txtGender;
    private javax.swing.JTextField txtLevel;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtPositionTitle;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtStartDate;
    private javax.swing.JTextField txtTeamInfo;
    // End of variables declaration//GEN-END:variables

    private void populateDataToTable() {
        //TableModel is used to manipulate table content.
        // type casts tablemodel to defaultTableModel.
    DefaultTableModel model = (DefaultTableModel) displayTable.getModel();
    model.setRowCount(0); // deleting empty records
    
    // looping over profileHistory of employees.
    // getProfileHistory returns the history of employee records.
    for (EmployeeProfile ep : profileHistory.getProfileHistory()){
        
        // row is array of objects with 9 menbers. (1 for each column)
        Object[] row =  new Object[10];
        row[0] = ep/*.getEmployeeId()*/;
        row[1] = ep.getName();
        row[2] = ep.getAge();
        row[3] = ep.getGender();
        row[4] = ep.getPhone();
        row[5] = ep.getEmail();
        row[6] = ep.getStartDate();
        row[7] = ep.getLevel();
        row[8] = ep.getTeamInfo();
        row[9] = ep.getPositionTitle();

        model.addRow(row); // adds row to model

    }
    }
    
}
